---
- name: Create conf.d directory
  become: yes
  file:
    dest: "{{ i2_conf_dir }}/{{ item }}"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
  with_items: "{{ i2_confd }}"

- name: Remove default config from conf.d directory
  become: yes
  file:
    dest: "{{ i2_conf_dir }}/hosts.conf"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
  with_items: "{{ i2_confd }}"

- name: Manage main Icinga 2 configuration
  become: yes
  template:
    src: icinga2.conf.j2
    dest: "{{ i2_conf_dir }}/icinga2.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  notify: reload icinga2

- name: Check for constants sample file
  become: yes
  stat:
    path: "{{ i2_conf_dir }}/constants.conf-sample"
  register: sample_file

- name: Copy original Icinga 2 config to sample
  become: yes
  copy:
    remote_src: true
    src: "{{ i2_conf_dir }}/constants.conf"
    dest: "{{ i2_conf_dir }}/constants.conf-sample"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  when: not sample_file.stat.exists

- name: Manage Icinga 2 constants
  become: yes
  template:
    src: constants.conf.j2
    dest: "{{ i2_conf_dir }}/constants.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  notify: reload icinga2

- name: Check for zones.conf sample file
  become: yes
  stat:
    path: "{{ i2_conf_dir }}/zones.conf-sample"
  register: zones_sample_file

- name: Copy original Icinga 2 zones.conf to sample
  become: yes
  copy:
    remote_src: true
    src: "{{ i2_conf_dir }}/zones.conf"
    dest: "{{ i2_conf_dir }}/zones.conf-sample"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  when: not zones_sample_file.stat.exists

- name: Check if Client Certificates exist
  become: yes
  stat:
    path: "{{ i2_pki_file }}"
  register: client_certificate

- name: Set-up Zone and Endpoints for localhost
  become: yes
  template:
    src: default_zone_fragment.j2
    dest: "{{ i2_conf_dir }}/zones.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
    backup: "{{ i2_keep_backups }}"
  when: client_certificate.stat.exists
  notify: reload icinga2

# icinga2 node setup takes care of this for us on first-run
- name: Set-up zones.conf on peers, satellites and agents
  become: yes
  blockinfile:
    create: yes
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    dest: "{{ i2_conf_dir }}/zones.conf"
    marker: "// {mark} Ansible managed block for peers or parents"
    content: "{{ lookup('template', 'templates/peer_zone_fragment.conf.j2') }}"
  when: i2_master or client_certificate.stat.exists

- name: Add global-templates zone to zones.conf
  become: yes
  blockinfile:
    create: yes
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    dest: "{{ i2_conf_dir }}/zones.conf"
    marker: "// {mark} Ansible managed block for global-templates"
    block: |
      object Zone "global-templates" {
        global = true
      }

- name: Icinga2 – Set-up remote Zones and Endpoints on Masters
  become: yes
  blockinfile:
    create: yes
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    dest: "{{ i2_conf_dir }}/zones.conf"
    marker: "// {mark} Ansible managed block for {{ item }} (satellite)"
    content: "{{ lookup('template', 'templates/zone_fragment.conf.j2') }}"
  loop: "{{ groups[i2_satellite_group] }}"
  when: i2_master
  notify: reload icinga2

- name: Icinga2 – Set-up remote Zones and Endpoints on Satellites
  become: yes
  blockinfile:
    create: yes
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    dest: "{{ i2_zones_dir }}/{{ hostvars[item].i2_zone }}/endpoints.conf"
    marker: "// {mark} Ansible managed block for {{ item }} (client)"
    content: "{{ lookup('template', 'templates/zone_fragment.conf.j2') }}"
  loop: "{{ groups[i2_agent_group] }}"
  when: i2_satellite
  notify: reload icinga2

# We want to use this from hostvars later on.
- name: Icinga2 – Set hostname from defaults
  set_fact:
    i2_hostname: "{{ i2_hostname }}"
